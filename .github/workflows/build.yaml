name: Build Pacman Packages

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'packages/**'
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - name: Instalar dependências
        run: |
          pacman -Syu --noconfirm base-devel git gnupg
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
   
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Create user
        run: |
          useradd -m builder
          passwd -d builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/builder
          chmod 777 -R $GITHUB_WORKSPACE

      - name: Importar chave GPG
        run: |
          mkdir -p /home/builder/.gnupg
          chown builder:builder -R /home/builder/.gnupg
          echo "$GPG_PRIVATE_KEY" > /home/builder/private.key
          chown builder:builder /home/builder/private.key
          sudo -u builder gpg --batch --import /home/builder/private.key
          shred -u /home/builder/private.key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          
      - name: Configurar GPG
        run: |
          echo "use-agent" >> /home/builder/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> /home/builder/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> /home/builder/.gnupg/gpg-agent.conf
          chown -R builder:builder /home/builder/.gnupg
          sudo -u builder gpg-connect-agent reloadagent /bye

      - name: Configurar chave de assinatura
        run: |
         sudo -u builder bash -c "echo 'GPGKEY=75093C925C10C833109F4445C7C3766AE5979ABC' > ~/.makepkg.conf"

      - name: Verificar pacotes do dispacth
        if: github.event_name == 'workflow_dispatch'
        run: |
          git rev-parse --is-inside-work-tree
          rm -rf repo
          mkdir -p repo
          cd packages

          for dir in */; do
            cd "$dir"
            if [[ -f PKGBUILD ]]; then
              echo "Compilando $pkgname..."
                if grep -q '^package()' PKGBUILD; then
                sudo -u builder bash -c "cd $GITHUB_WORKSPACE/packages/$dir && makepkg -sf --noconfirm --clean --cleanbuild"
                else
                sudo -u builder bash -c "cd $GITHUB_WORKSPACE/packages/$dir && makepkg -d --noconfirm"
                fi
              cp *.pkg.tar.zst ../../repo/
            fi
            cd ..
          done
      - name: Assinando Pacotes
        run: |
          chown builder:builder -R ${GITHUB_WORKSPACE}/repo/
          chmod 777 -R ${GITHUB_WORKSPACE}/repo/
          cd ${GITHUB_WORKSPACE}/repo/
          for pkg in *.pkg.tar.zst; do
            echo "Assinando pacote $pkg"
             sudo -u builder bash -c  "gpg --detach-sign --pinentry-mode loopback --passphrase --passphrase-fd 0 --output \"${pkg}.sig\" --sign $pkg  <<< $GPG_PASSPHRASE"
          done
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}


      - name: Atualizar banco de pacotes
        run: |
          git rev-parse --is-inside-work-tree
          cd ${GITHUB_WORKSPACE}
          cd repo
          repo-add -n -R --sign orion.db.tar.gz *.pkg.tar.zst

      - name: Commit e Push
        run: |
          git rev-parse --is-inside-work-tree
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add repo/*.pkg.tar.zst
          git add repo/*.db* repo/*.files*
          git commit -m "Atualiza repositório com novos pacotes" || echo "Nada para commitar"
          git push
